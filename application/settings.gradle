// == Define locations for build logic ==
pluginManagement {
    repositories {
        gradlePluginPortal()
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
    }
    // includeBuild('../shared/build-logic')
    includeBuild('../build-logic')
}

// == Define locations for components ==
dependencyResolutionManagement {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/public/' }
        mavenCentral()
    }
}
// includeBuild('../shared/platforms')
includeBuild('../platforms')

rootProject.name = 'application'

include("logs-config:log4j2-console")
include("logs-config:logback-console")
include("logs-config:logback-springboot")
include("logs-config:logback-springboot-console")

// component

// component integration
include('component:integration:integration-tcp-client')
include('component:integration:integration-tcp-server')
include('component:integration:tcp')

// core
include('core:bean-factory')

// db
include('db:tree')
include('db:tdengine')
include('db:pg-json')

include('generic')
// middleware apache camel
include('middleware:camel:camel-boot')

// middleware elasticsearch
include('middleware:elastic:boot-es')
include('middleware:elastic:boot-logstash')
include('middleware:elastic:search-java-api')

// middleware kafka
include('middleware:kafka:java-api')
include('middleware:kafka:kafka-boot')

// middleware trace
include('middleware:trace:opentracing')

// middleware 选举算法，基于 basic-paxos 多线程实现  raft
include('middleware:raft:election')

// middleware redisson
include('middleware:redis:cache')
include('middleware:redis:redisson-boot')

// middleware zookeeper lock
include('middleware:zookeeper:distribution-lock')

// reactor
include('reactor:core')
include('reactor:netty')

// java
include("jdk")